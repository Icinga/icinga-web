SHELL=/bin/sh
PACKAGE_TARNAME=@PACKAGE_TARNAME@
PACKAGE_NAME=@PACKAGE_NAME@
PACKAGE_VERSION=@PACKAGE_VERSION@
VERSION_MAJOR=@VERSION_MAJOR@
VERSION_MINOR=@VERSION_MINOR@
VERSION_PATCH=@VERSION_PATCH@
VERSION_EXTEN=@VERSION_EXTEN@
RELEASE_DATE=@RELEASE_DATE@
TAR_DIR_NAME=$(shell basename `pwd`)
prefix=@prefix@
exec_prefix=@exec_prefix@
LOGDIR=@localstatedir@
CFGDIR=@sysconfdir@
BINDIR=@bindir@
CGIDIR=@sbindir@
HTMLDIR=@datarootdir@
INSTALL=@INSTALL@
INSTALL_OPTS=@INSTALL_OPTS@
INSTALL_OPTS_WEB=@INSTALL_OPTS_WEB@
INSTALL_OPTS_CACHE=@INSTALL_OPTS_CACHE@
BIN_USER=@bin_user@
BIN_GROUP=@bin_group@
WEB_USER=@web_user@
WEB_GROUP=@web_group@
WEB_PATH=@web_path@
WEB_APACHE_PATH=@web_apache_path@
SED=@SED@
PHP=@PHP@
PHING=@PHING@
PHING_CALL=bin/phing -f etc/build.xml
API_DIR=@icinga_api@
INC_MAKE_FILES=etc/make/files.mk etc/make/special.mk etc/make/siteconfig.mk
LOC_PO=app/data/i18n/po
LOC_MO=app/data/i18n/mo
LOC_TEMPLATE=$(LOC_PO)/templates/default.pot

none:
#	@printf "\t%-22s - %s\n" "" ""
	@printf "Please supply a command line argument (i.e. 'make install').\n\n"
	@printf "Generic targets: install, clean\n\n"
	@printf "For updates please use 'upgrade' to avoid overwriting your siteconfig!\n\n"
	@printf "Other usefull targets:\n"
	@printf "\t%-22s - %s\n" "testdeps" "test php dependencies"
	@printf "\t%-22s - %s\n" "create-tarball" "creates a tarball for packaging"
	@printf "\t%-22s - %s\n" "create-tarball-nightly" "creates a tarball from HEAD for nightly builds"
	@printf "\t%-22s - %s\n" "devclean" "make source ready for commit or packaging"
	@printf "\t%-22s - %s\n" "cacheclean" "purges the agavi xml cache"
	
	@printf "\nDatabase (web) targets:\n"
	@printf "\t%-22s - %s\n" "db-initialize" "create the db"
	@printf "\t%-22s - %s\n" "db-deinitialize" "reverse the path (removes all data and drop the relations)"
	@printf "\t%-22s - %s\n" "db-upgrade" "tries to upgrade from a available db revision"
	@printf "\t%-22s - %s\n" "db-drop" "drop the entire db"
	@printf "\t%-22s - %s\n" "db-purge-userprefs" "purge existing user preferences"
	@printf "\t%-22s - %s\n" "db-doc2sql" "export doctrine db schema"

	@printf "\nIcinga web targets:\n"
	@printf "\t%-22s - %s\n" "icinga-reset-password" "Reset password for any account on icinga-web"
	@printf "\t%-22s - %s\n" "install-apache-config" "Install the apache config to configured path"

	@printf "\nI18n targets:\n"
	@printf "\t%-22s - %s\n" "loc-update-catalog" "Create a initial locale from source (default.po)"
	@printf "\t%-22s - %s\n" "loc-compile" "Compile language files into mo and json"

	@printf "\nScheduler targets:\n"
	@printf "\t%-22s - %s\n" "scheduler-install" "Install the icingaScheduler cronkjob"
	@printf "\t%-22s - %s\n" "scheduler-remove" "remove the icingaScheduler cronkjob"
	@printf "\n\n"
	
include $(INC_MAKE_FILES)

realclean: clean distclean cacheclean logclean

cleanall: realclean

cacheclean:
	rm -rf app/cache/config/*.php
	rm -rf app/cache/content

logclean:
	rm -rf app/data/log/*.log

locclean:
	rm -f \
		$(LOC_MO)/*.mo \
		$(LOC_MO)/*.json

distclean:
	rm -f \
		Makefile \
		config.log \
		config.status \
		etc/build.properties \
		etc/tests/test.properties \
		etc/apache2/icinga-web.conf
		
clean:
	rm -f \
		app/config/databases.xml \
		app/config/icinga.xml \
		app/modules/Web/config/icinga-io.xml \
		pub/.htaccess \
		pub/soap/.htaccess \
		bin/clearcache.sh

devclean: dev-commit-prepare

dev-commit-prepare: remove-temp-files distclean cacheclean logclean make-create-files clean

remove-temp-files:
	bin/rmtmp-files.sh

create-tarball:
	#tar -czf ../$(PACKAGE_TARNAME)-$(PACKAGE_VERSION).tar.gz ../$(TAR_DIR_NAME)
	./bin/make-tarball --prefix $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)/

create-tarball-nightly:
	#${MAKE} submodule-update
	./bin/make-tarball --prefix $(PACKAGE_TARNAME)_$(PACKAGE_VERSION)_`date +%Y%m%d`-`git rev-parse --short HEAD`/

testdeps:
	 $(PHP) bin/testdeps.php
	 
install-done:
	@printf "\n\n"
	@printf "Installation if icinga-web succeeded.\n"
	@printf "\n"
	@printf	"Please check the new Apache2 configuration (etc/apache2/icinga-web.conf).\n"
	@printf "\n"
	@printf "You can install it simply by invoking 'make install-apache-config'.\n"
	@printf "\n"
	@printf "If you don't want this you can restore its old behavior by\n"
	@printf "typing 'make install-javascript'. This will install the old symlinks\n"
	@printf "\n"
	@printf "Have fun!\n\n"


install-javascript:
	$(INSTALL) -m 755 $(INSTALL_OPTS) -d $(DESTDIR)$(prefix)/pub/js
	ln -sf $(DESTDIR)$(prefix)/lib/ext3 $(DESTDIR)$(prefix)/pub/js/ext3

install-apache-config:
	${INSTALL} -b -m 664 $(INSTALL_OPTS) etc/apache2/icinga-web.conf $(DESTDIR)$(WEB_APACHE_PATH)/icinga-web.conf
	@printf "\nInstalled configuration in '%s'.\n" "$(WEB_APACHE_PATH)"
	@printf "Please make sure that the directory is included or \n"
	@printf "include %s/icinga-web.conf manually.\n" "$(WEB_APACHE_PATH)"
	@printf "\nPlease restart your apache in order to complete this step.\n\n"

install-default:
	@printf "Install %d dirs with %d files (quiet)\n" "$(INC_DIRS)" "$(INC_FILES)"
	$(MAKE) -s inc-install-files
	$(MAKE) inc-install-special

install: install-default inc-install-siteconfig install-done

upgrade-done:
	@printf "\n\n"
	@printf "Upgrade if icinga-web succeeded.\n"
	@printf "\n"
	@printf "Please check your site config files if something have to be changed.\n"
	@printf "\n"
	@printf "For database upgrades look into etc/schema/updates and import the\n"
	@printf "appropriate changes into your database\n"
	@printf "\n"
	@printf "Have fun!\n\n"

upgrade: install-default upgrade-done

db-initialize:
	$(PHING_CALL) db-initialize

db-deinitialize:
	$(PHING_CALL) db-initialize

db-doc2sql:
	${PHING_CALL} doc2sql

db-drop:
	$(PHING_CALL) db-drop

db-upgrade:
	$(PHING_CALL) db-upgrade

db-purge-userprefs:
	$(PHING_CALL) db-purge-userprefs

make-create-files:
	$(SED) -i '/^# INSTALL_FILES_BEGIN/,/^# INSTALL_FILES_END/{D}' $(INC_MAKE_FILES)
	./bin/create-makefile.sh ./ >> $(INC_MAKE_FILES)

loc-update-catalog:
	./bin/loc-create-catalog.pl --base=./ --out=$(LOC_PO)/templates/default.pot
	./bin/loc-merge-template.sh $(LOC_PO)/templates/default.pot $(LOC_PO)

loc-compile: loc-create-mo loc-create-json

loc-create-mo:
	./bin/loc-create-mo.sh $(LOC_PO) $(LOC_MO)

loc-create-json:
	./bin/loc-create-json.sh $(LOC_PO) $(LOC_MO)

submodule-init:
	git submodule init app/data/i18n/po

submodule-update:
	cd app/data/i18n/po
	git checkout master
	git pull origin master
	cd -
	git submodule update

scheduler-install:
	$(PHING_CALL) scheduler-install -DPATH_Icinga=$(prefix)

scheduler-remove:
	$(PHING_CALL) scheduler-remove -DPATH_Icinga=$(prefix)

icinga-reset-password:
	$(PHING_CALL) icinga-reset-password
