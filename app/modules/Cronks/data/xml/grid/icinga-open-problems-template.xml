<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<template>
    
    <!-- 
    	Meta description of the templates, that anybody
    	knows what the template is doing
    -->
    <meta>
        <parameter name="name">Open problems status template</parameter>
        <parameter name="description">Displays information about occured problems</parameter>
        <parameter name="author">icinga-web developers</parameter>
    </meta>
    
    <!-- 
    	Options for the template. Change layout and view style to fit the type you
    	want to display
    -->
    <option>
        <parameter name="mode">default</parameter>
        <parameter name="layout">IcingaTemplateAjaxGridLayout</parameter> 

		<parameter name="autoRefreshTime">${xmlfn.autoRefreshTime}</parameter>

        <!-- These are a dynamic js lib for using specific column renderes within this template -->
        <parameter name="dynamicscript">
        	<parameter>Cronk.grid.IcingaColumnRenderer</parameter>
        </parameter>
        
        <parameter name="gridEvents">
        	
        	<!-- Initialize comments -->
        	<parameter>
        		<parameter name="type">viewready</parameter>
        		<parameter name="function">Cronk.grid.GridUtil.initCommentEventHandler</parameter>
        		<parameter name="arguments">
        			<parameter name="column_name">comments</parameter>
               		<!-- <parameter name="class">icinga-icon-comment icon-24 icinga-link icinga-notext</parameter> -->
               		<parameter name="title">Comments for {host_name}</parameter>
        		</parameter>
        	</parameter>
        	
        </parameter>
        
        <!-- 
        	Selection model of rows (checkbox/row). This is needed for
        	commands and maybe other user things ...
        -->
        <parameter name="selection_model">checkbox</parameter>
        
        <!-- 
        	Enable/disable commands and specify which of type you'll need
        -->
        <parameter name="commands">
        	<!-- 
        		Generally enabled od disabled
        	-->
        	<parameter name="enabled">false</parameter>
        
        	<!--
        		Sourcefieldmapping
        		* Which field content comes from the template data source
        	-->
        	<parameter name="source">
        		<parameter name="IcingaApi::COMMAND_HOST">host_name</parameter>
				<parameter name="IcingaApi::COMMAND_INSTANCE">instance_name</parameter>
        	</parameter>
        	
        	<parameter name="predefined">
        		<parameter name="IcingaApi::COMMAND_AUTHOR">${xmlfn.author}</parameter>
        	</parameter>
        	
        	<!-- 
        		Which commands are available in this template and can charged
        		with template data
        	-->
        
        	
        </parameter>
        
        <!-- 
        	Additional filter
        	* Keep in mind to map the names in datasource.additional_filter_fields
        -->
        <parameter name="filter">
        	<paramter name="custom_variable_name">
        		<parameter name="enabled">true</parameter>
        		<parameter name="type">extjs</parameter>
        		<parameter name="subtype">appkit.ext.filter.api</parameter>
        		<parameter name="label">CV Name</parameter>

				<!-- Operator type is needed because we don't know which type returned-->
				<parameter name="operator_type">text</parameter>

				<parameter name="api_target">customvariable</parameter>
				<parameter name="api_keyfield">CUSTOMVARIABLE_NAME</parameter>
				<parameter name="api_valuefield">CUSTOMVARIABLE_NAME</parameter>

        	</paramter>
        	<paramter name="custom_variable_value">
        		<parameter name="enabled">true</parameter>
        		<parameter name="type">extjs</parameter>
        		<parameter name="subtype">appkit.ext.filter.api</parameter>
        		<parameter name="label">CV Val</parameter>

				<!-- Operator type is needed because we don't know which type returned-->
				<parameter name="operator_type">text</parameter>

				<parameter name="api_target">customvariable</parameter>
				<parameter name="api_keyfield">CUSTOMVARIABLE_VALUE</parameter>
				<parameter name="api_valuefield">CUSTOMVARIABLE_VALUE</parameter>
				
				<!-- Comma seperated list of additional select fields (e.g. distinct changes or tpl) -->
				<parameter name="api_additional">CUSTOMVARIABLE_NAME</parameter>

				<!-- If using the api_additional maybe api_exttpl should be defined too -->
				<parameter name="api_exttpl"><![CDATA[ {CUSTOMVARIABLE_NAME}: {CUSTOMVARIABLE_VALUE} ]]></parameter>

				<parameter name="api_id">CUSTOMVARIABLE_VALUE</parameter>
				
        	</paramter>
        	<paramter name="hostgroup_name">
        		<parameter name="enabled">true</parameter>
        		<parameter name="type">extjs</parameter>
        		<parameter name="subtype">appkit.ext.filter.api</parameter>
        		<parameter name="label">Hostgroup</parameter>

				<!-- Operator type is needed because we don't know which type returned-->
				<parameter name="operator_type">text</parameter>

				<parameter name="api_target">hostgroup</parameter>
				<parameter name="api_keyfield">HOSTGROUP_NAME</parameter>
				<parameter name="api_valuefield">HOSTGROUP_NAME</parameter>

        	</paramter>
        </parameter>
    </option>
    
    <!-- 
    	What data to display? Define icinga data targets and countfields
    -->
    <datasource>
        <parameter name="target">IcingaApi::TARGET_HOST_SERVICE</parameter>
        
        <parameter name="id">object_id</parameter>
        
        <!--
        	If the countmode is 'simple' countfields will be ignored always! To use with a pager
        	you have to use the 'field' mode to count all data independent from data
        -->
		<parameter name="countmode">field</parameter>
		
		<!-- 
			If the counting differs from data result you can specify a field to count
		-->
        <parameter name="countfields">
        	<parameter>PROBLEMS_OBJECT_ID</parameter>
        </parameter>
        
        <!-- 
        	Additional fields we would like to work with it (append them on the datasource
        	without working the default structures, e.g. for user classes)
        -->
       	<parameter name="additional_fields">
       		<parameter name="max_attempt_host">HOST_MAX_CHECK_ATTEMPTS</parameter>
			<parameter name="max_attempt_service">SERVICE_MAX_CHECK_ATTEMPTS</parameter>
       		<parameter name="instance_id">HOST_INSTANCE_ID</parameter>
			<parameter name="service_is_pending">SERVICE_IS_PENDING</parameter>
			<parameter name="host_is_pending">HOST_IS_PENDING</parameter>
       	</parameter>
       	
       	<parameter name="additional_filter_fields">
       		<parameter name="hostgroup_object_id">HOSTGROUP_OBJECT_ID</parameter>
       		<parameter name="hostgroup_name">HOSTGROUP_NAME</parameter>
			<parameter name="servicegroup_name">SERVICEGROUP_NAME</parameter>
       		<parameter name="custom_variable_name">HOST_CUSTOMVARIABLE_NAME</parameter>
       		<parameter name="custom_variable_value">HOST_CUSTOMVARIABLE_VALUE</parameter>

			<!-- Some mapping for stupid filters -->
			<parameter name="customvariable_name">HOST_CUSTOMVARIABLE_NAME</parameter>
			<parameter name="customvariable_value">HOST_CUSTOMVARIABLE_VALUE</parameter>
       	</parameter>

		<parameter name="filterPresets">
			<parameter name="OR">
				<parameter name="AND_1">
					<parameter>
						<parameter name="field">SERVICE_CURRENT_STATE</parameter>
						<parameter name="val">0</parameter>
						<parameter name="op">!=</parameter>
					</parameter>
					<parameter>
						<parameter name="field">SERVICE_PROBLEM_HAS_BEEN_ACKNOWLEDGED</parameter>
						<parameter name="val">1</parameter>
						<parameter name="op">!=</parameter>
					</parameter>
				</parameter>
				<parameter name="AND_2">
					<parameter>
						<parameter name="field">HOST_CURRENT_STATE</parameter>
						<parameter name="val">0</parameter>
						<parameter name="op">!=</parameter>
					</parameter>
					<parameter>
						<parameter name="field">HOST_PROBLEM_HAS_BEEN_ACKNOWLEDGED</parameter>
						<parameter name="val">1</parameter>
						<parameter name="op">!=</parameter>
					</parameter>
				</parameter>
			</parameter>
		</parameter>
    </datasource>
    
    <!-- 
    	Paging record on its result
    -->
    <pager>
    	<parameter name="enabled">true</parameter>
    	<parameter name="size">${xmlfn.pagerMaxItems}</parameter>
    	<parameter name="start">0</parameter>
    </pager>
    
    <grouping>
    	<parameter name="enabled">false</parameter>
    	<parameter name="field">A_XML_FIELD_TO_GROUP</parameter>
    </grouping>
    
    <!--
    	Field decleration: What to display and how
    -->
    <fields>

		<field name="instance_name">
        	<datasource>
        		<parameter name="field">INSTANCE_NAME</parameter>
        	</datasource>

        	<display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Instance</parameter>

				<parameter name="width">60</parameter>

				<parameter name="Ext.grid.Column">
                	<parameter name="fixed">false</parameter>
                </parameter>
            </display>

            <filter>
                <parameter name="enabled">true</parameter>

				<!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
				<parameter name="subtype">appkit.ext.filter.api</parameter>

				<!-- Operator type is needed because we don't know which type returned-->
				<parameter name="operator_type">text</parameter>

				<parameter name="api_target">instance</parameter>
				<parameter name="api_keyfield">INSTANCE_NAME</parameter>
				<parameter name="api_valuefield">INSTANCE_NAME</parameter>
            </filter>

            <order>
                <parameter name="enabled">false</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>

        <field name="object_id">
        	<datasource>
        		<parameter name="field">PROBLEMS_OBJECT_ID</parameter>
        	</datasource>
        	
        	<display>
                <parameter name="visible">false</parameter>
                <parameter name="label">Id</parameter>
            </display>
            
            <filter>
                <parameter name="enabled">true</parameter>
                
                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
                <parameter name="subtype">appkit.ext.filter.number</parameter>
                
                <parameter name="no_operator">false</parameter>
               	                
				<parameter name="field">PROBLEMS_OBJECT_ID</parameter>
            </filter>
            
            <order>
                <parameter name="enabled">false</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>
		
		<field name="host_object_id">
        	<datasource>
        		<parameter name="field">HOST_OBJECT_ID</parameter>
        	</datasource>

        	<display>
                <parameter name="visible">false</parameter>
                <parameter name="label">Id</parameter>
            </display>

            <filter>
                <parameter name="enabled">true</parameter>

                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
                <parameter name="subtype">appkit.ext.filter.number</parameter>

                <parameter name="no_operator">false</parameter>

				<parameter name="field">HOST_OBJECT_ID</parameter>
            </filter>

            <order>
                <parameter name="enabled">false</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>

        <field name="host_name">
            <datasource>
            	<parameter name="field">HOST_NAME</parameter>
            </datasource>
            
            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Host</parameter>
                
                <parameter name="jsFunc">
                
                	<parameter>
	                	<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
	                	<parameter name="function">columnElement</parameter>
	                	
	                	<!-- renderer/gridevent[cellclick|celldblclick|...] -->
	                	<parameter name="type">renderer</parameter>
	                	
	                	<parameter name="arguments">
	                		<parameter name="css">x-icinga-grid-link</parameter>
	                		
							<parameter name="attr">
								<parameter name="qtip">Click to view covered services</parameter>
							</parameter>
							
	                	</parameter>
	                </parameter>
                
	                <parameter>
	                	<parameter name="namespace">Cronk.grid.IcingaColumnRenderer</parameter>
	                	<parameter name="function">subGrid</parameter>
	                	
	                	<!-- renderer/gridevent[cellclick|celldblclick|...] -->
	                	<parameter name="type">cellclick</parameter>
	                	
	                	<parameter name="arguments">
	                		<parameter name="idPrefix">servicesForHost</parameter>
	                		<parameter name="titlePrefix">Services for</parameter>
							<parameter name="targetTemplate">icinga-service-template</parameter>
							<parameter name="filterMap">
								<parameter name="host_object_id">host_object_id</parameter>
							</parameter>
							<parameter name="labelField">host_name</parameter>
	                	</parameter>
	                </parameter>
	                
                </parameter>
                
            </display>
            
            <filter>
                <parameter name="enabled">true</parameter>
                
                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
				<parameter name="subtype">appkit.ext.filter.api</parameter>
				<parameter name="operator_type">text</parameter>
				<parameter name="api_target">host</parameter>
				<parameter name="api_keyfield">HOST_NAME</parameter>
				<parameter name="api_valuefield">HOST_NAME</parameter>
            </filter>
            
            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">true</parameter>
                <parameter name="direction">ASC</parameter>
                
                <!--  <parameter name="field">A_NEW_FIELD_TO_SORT</parameter> -->
            </order>
        </field>  
		<field name="service_name">
            <datasource>
            	<parameter name="field">SERVICE_NAME</parameter>
            </datasource>

            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Service</parameter>

                <parameter name="jsFunc">
                	

					<parameter>
	                	<parameter name="namespace">Cronk.grid.IcingaColumnRenderer</parameter>
	                	<parameter name="function">ajaxClick</parameter>

	                	<!-- renderer/gridevent[cellclick|celldblclick|...] -->
	                	<parameter name="type">cellclick</parameter>

	                	<parameter name="arguments">
	                		<parameter name="title">Detailed serviceinfo</parameter>
	                		<parameter name="src_id">serviceinfo</parameter>
	                		<parameter name="filter">
	                			<parameter name="host">host_name</parameter>
	                			<parameter name="service">service_name</parameter>
	                		</parameter>
	                	</parameter>
	                </parameter>
                </parameter>
            </display>

            <filter>
                <parameter name="enabled">true</parameter>

                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
				<parameter name="subtype">appkit.ext.filter.api</parameter>
				<parameter name="operator_type">text</parameter>
				<parameter name="api_target">service</parameter>
				<parameter name="api_keyfield">SERVICE_NAME</parameter>
				<parameter name="api_valuefield">SERVICE_NAME</parameter>
            </filter>

            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">true</parameter>
                <parameter name="direction">ASC</parameter>

                <!--  <parameter name="field">A_NEW_FIELD_TO_SORT</parameter> -->
            </order>
        </field>

        <field name="host_status">
        	<datasource>
        		<parameter name="field">HOST_CURRENT_STATE</parameter>
        	</datasource>
        	
            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Host status</parameter>
                <parameter name="width">100</parameter>
                
                <!-- Config for the AJAX grid (see http://www.extjs.com/deploy/dev/docs/?class=Ext.grid.Column) -->
                <parameter name="Ext.grid.Column">
                	<parameter name="fixed">true</parameter>
                </parameter>
                
				<parameter name="jsFunc">
                	<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
	                <parameter name="function">hostStatus</parameter>
	                	
	                <!-- renderer/gridevent[cellclick|celldblclick|...] -->
	                <parameter name="type">renderer</parameter>
                </parameter>
            </display>
        	
            <filter>
                <parameter name="enabled">true</parameter>
                
                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
                <parameter name="subtype">appkit.ext.filter.hoststatus</parameter>
                
                <parameter name="no_operator">false</parameter>
            </filter>
            
            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>
      
		<field name="service_status">
        	<datasource>
        		<parameter name="field">SERVICE_CURRENT_STATE</parameter>
        	</datasource>

            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Service status</parameter>
                <parameter name="width">100</parameter>

                <!-- Config for the AJAX grid (see http://www.extjs.com/deploy/dev/docs/?class=Ext.grid.Column) -->
                <parameter name="Ext.grid.Column">
                	<parameter name="fixed">true</parameter>
                </parameter>

				<parameter name="jsFunc">
                	<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
	                <parameter name="function">serviceStatus</parameter>

	                <!-- renderer/gridevent[cellclick|celldblclick|...] -->
	                <parameter name="type">renderer</parameter>
                </parameter>
            </display>

            <filter>
                <parameter name="enabled">true</parameter>

                <!-- Filter configuration -->
                <parameter name="type">extjs</parameter>
                <parameter name="subtype">appkit.ext.filter.hoststatus</parameter>

                <parameter name="no_operator">false</parameter>
            </filter>

            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>
        <field name="host_last_check">
        	<datasource>
        		<parameter name="field">HOST_LAST_CHECK</parameter>
        	</datasource>
        	
            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Last check (host)</parameter>
                
                <!-- Let the agavi translation manager transform the date -->
                <parameter name="userFunc">
               		<parameter name="class">IcingaTemplateDisplayFormat</parameter>
               		<parameter name="method">agaviDateFormat</parameter>
                </parameter>
            </display>
        	
            <filter>
                <parameter name="enabled">false</parameter>    
            </filter>
            
            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">true</parameter>
                <parameter name="order">DESC</parameter>
            </order>
        </field>
      <field name="service_last_check">
        	<datasource>
        		<parameter name="field">SERVICE_LAST_CHECK</parameter>
        	</datasource>

            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Last check (service)</parameter>

                <!-- Let the agavi translation manager transform the date -->
                <parameter name="userFunc">
               		<parameter name="class">IcingaTemplateDisplayFormat</parameter>
               		<parameter name="method">agaviDateFormat</parameter>
                </parameter>
            </display>

            <filter>
                <parameter name="enabled">false</parameter>
            </filter>

            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">true</parameter>
                <parameter name="order">DESC</parameter>
            </order>
        </field>
        
        <field name="check_attempt_host">
        	<datasource>
        		<parameter name="field">HOST_CURRENT_CHECK_ATTEMPT</parameter>
        	</datasource>
        	
            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Attempt (Host)</parameter>
                
				<parameter name="userFunc">
                	<parameter name="class">IcingaTemplateDisplayFormat</parameter>
                	<parameter name="method">formatTemplate</parameter>
					<parameter name="arguments">
						<parameter name="format"><![CDATA[${field.check_attempt_host} / ${field.max_attempt_host}]]></parameter>
					</parameter>
                </parameter>
            </display>
        	
            <filter>
                <parameter name="enabled">false</parameter>    
            </filter>
            
            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>

        <field name="check_attempt_service">
        	<datasource>
        		<parameter name="field">SERVICE_CURRENT_CHECK_ATTEMPT</parameter>
        	</datasource>

            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Attempt (Service)</parameter>
				<parameter name="jsFunc">
					<parameter>
						<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
						<parameter name="function">regExpReplace</parameter>

						<!-- renderer/gridevent[cellclick|celldblclick|...] -->
						<parameter name="type">renderer</parameter>

						<parameter name="arguments">

							<parameter name="expression"><![CDATA[^[^0-9]*?[^ ][^\/][^ ][^0-9]*?$]]></parameter>
							<parameter name="replacement">N/A</parameter>
						</parameter>
					</parameter>
				</parameter>
				<parameter name="userFunc">
                	<parameter name="class">IcingaTemplateDisplayFormat</parameter>
                	<parameter name="method">formatTemplate</parameter>
					<parameter name="arguments">
						<parameter name="format"><![CDATA[${field.check_attempt_service} / ${field.max_attempt_service}]]></parameter>
					</parameter>
                </parameter>
            </display>

            <filter>
                <parameter name="enabled">false</parameter>
            </filter>

            <order>
                <parameter name="enabled">true</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>

        <field name="plugin_output">
        	<datasource>
        		<parameter name="field">HOST_OUTPUT</parameter>
        	</datasource>
        	
            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Hostcheck output</parameter>
                
                <parameter name="jsFunc">
                	<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
                	<parameter name="function">truncateText</parameter>
                	<parameter name="arguments">
						<parameter name="length">40</parameter>
                	</parameter>
                </parameter>
                
            </display>
        	
            <filter>
                <parameter name="enabled">false</parameter>    
            </filter>
            
            <order>
                <parameter name="enabled">false</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>

        <field name="plugin_output_service">
        	<datasource>
        		<parameter name="field">SERVICE_OUTPUT</parameter>
        	</datasource>

            <display>
                <parameter name="visible">true</parameter>
                <parameter name="label">Servicecheck output</parameter>

                <parameter name="jsFunc">
                	<parameter name="namespace">Cronk.grid.ColumnRenderer</parameter>
                	<parameter name="function">truncateText</parameter>
                	<parameter name="arguments">
						<parameter name="length">40</parameter>
                	</parameter>
                </parameter>

            </display>

            <filter>
                <parameter name="enabled">false</parameter>
            </filter>

            <order>
                <parameter name="enabled">false</parameter>
                <parameter name="default">false</parameter>
            </order>
        </field>
    </fields>
    
</template>
