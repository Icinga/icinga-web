<?xml version="1.0" encoding="UTF-8"?>
<ae:configurations
	xmlns="http://agavi.org/agavi/config/parts/validators/1.0"
	xmlns:ae="http://agavi.org/agavi/config/global/envelope/1.0"
	parent="%core.module_dir%/Cronks/config/validators.xml"
>
	<ae:configuration>
		
	<validators>
		<!-- This parameters are set through the cronkloader -->
		
		<!--
			If you need an unique id to initialize your component,
			take this parameter.
			
			If you using the Cronk.util.initEnvironment tool,
			this parameter can be ignored
		-->
		<validator class="string" name="cmpid" required="false">
					<argument>cmpid</argument>
					
					<errors>
						<error>Validation of htmlid failed!</error>
					</errors>
		</validator>
		
		
		<!-- 
			The ExtJS if of your parent container. This ID is needed
			to initialize the Cronk.util.initEnvironment or to add
			your component to the parent container manually.
		-->
		<validator class="string" name="parentid" required="false">
					<argument>parentid</argument>
					
					<errors>
						<error>Validation of parentid failed!</error>
					</errors>
		</validator>
		
		<!-- 
			The Cronk registry holds information about dynamic stateuid information
			for extjs (i.e. if you create the same Cronk twice). If you want to 
			implement ExtJS stateful components, this stateid must used in order
			to work within the environment 
		-->
		<validator class="string" name="stateuid" required="false">
			<argument>stateuid</argument>
			
			<errors>
				<error>Validation of stateuid failed!</error>
			</errors>
		</validator>
		
		
		<validator class="string" name="url" required="true">
			<argument>p[url]</argument>
			<errors>
				<error>Validation of url failed!</error>
			</errors>
		</validator>
		
		<validator class="string" name="name" required="true">
			<argument>p[name]</argument>
			<errors>
				<error>Validation of name failed!</error>
			</errors>
		</validator>
		
		<validator class="string" name="pass" required="true">
			<argument>p[pass]</argument>
			<errors>
				<error>Validation of pass failed!</error>
			</errors>
		</validator>
		
		<validator class="string" name="bpConfig" required="false">
			<argument>p[bpConfig]</argument>
			<errors>
				<error>Validation of config failed!</error>
			</errors>
		</validator>
		
		<validator class="string" name="filters" required="false">
			<argument>p[filters]</argument>
			<errors>
				<error>Validation of filters failed!</error>
			</errors>
		</validator>		
		</validators>
		
	</ae:configuration>
</ae:configurations>
